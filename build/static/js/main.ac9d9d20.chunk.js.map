{"version":3,"sources":["components/PersonForm.js","components/Filter.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["PersonForm","props","onSubmit","addPerson","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Filter","filter","handleFilterChange","Persons","persons","person","name","toLowerCase","includes","map","number","onClick","removePerson","id","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","style","className","App","useState","setPersons","setNewName","setNewNumber","setFilter","infoMessage","setInfoMessage","messageStyle","setMessageStyle","useEffect","console","log","personService","initialPersons","length","event","target","preventDefault","window","confirm","find","p","returnedPerson","setTimeout","concat","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ac9d9d20.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.addPerson}>\r\n      <div>\r\n        name: <input value={props.newName} onChange={props.handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number:{\" \"}\r\n        <input\r\n          value={props.newNumber}\r\n          onChange={props.handleNumberChange}\r\n        ></input>{\" \"}\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">Add Person</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\n\r\nconst Filter = (props) => {\r\n  return (\r\n    <div>\r\n      Filter shown with{\" \"}\r\n      <input value={props.filter} onChange={props.handleFilterChange}></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst Persons = (props) => {\r\n  const res = props.persons.filter((person) =>\r\n    person.name.toLowerCase().includes(props.filter.toLowerCase())\r\n  );\r\n\r\n  return res.map((person) => (\r\n    <p key={person.name}>\r\n      {person.name} {person.number}{\" \"}\r\n      <button onClick={() => props.removePerson(person.id, person.name)}>\r\n        Delete\r\n      </button>\r\n    </p>\r\n  ));\r\n};\r\n\r\nexport default Persons;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"api/persons\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, create, update, remove };\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message, style }) => {\r\n  if (message === null) return null;\r\n\r\n  return <div className={style}>{message}</div>;\r\n};\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PersonForm from \"./components/PersonForm\";\r\nimport Filter from \"./components/Filter\";\r\nimport Persons from \"./components/Persons\";\r\nimport personService from \"./services/persons\";\r\nimport Notification from \"./components/Notification\";\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [infoMessage, setInfoMessage] = useState(null);\r\n  const [messageStyle, setMessageStyle] = useState(\"info\");\r\n\r\n  useEffect(() => {\r\n    console.log(\"effect\");\r\n    personService.getAll().then((initialPersons) => {\r\n      setPersons(initialPersons);\r\n    });\r\n  }, []);\r\n\r\n  console.log(\"render\", persons.length, \"persons\");\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Button clicked\", event.target);\r\n\r\n    if (persons.map((person) => person.name).includes(newName)) {\r\n      if (\r\n        window.confirm(\r\n          `${newName} is already added to phonebook, replace the number with the new one?`\r\n        )\r\n      ) {\r\n        const id = persons.find((p) => p.name === newName).id;\r\n        const personObject = {\r\n          name: newName,\r\n          number: newNumber,\r\n        };\r\n        personService.update(id, personObject).then((returnedPerson) => {\r\n          setPersons(persons.map((p) => (p.id !== id ? p : returnedPerson)));\r\n          setMessageStyle(\"info\");\r\n          setInfoMessage(\r\n            `The phone number of ${returnedPerson.name} has been updated`\r\n          );\r\n          setTimeout(() => {\r\n            setInfoMessage(null);\r\n          }, 5000);\r\n        });\r\n      }\r\n    } else {\r\n      const personObject = {\r\n        name: newName,\r\n        number: newNumber,\r\n      };\r\n      personService.create(personObject).then((returnedPerson) => {\r\n        setPersons(persons.concat(returnedPerson));\r\n        setMessageStyle(\"info\");\r\n        setInfoMessage(`${returnedPerson.name} has been added`);\r\n        setTimeout(() => {\r\n          setInfoMessage(null);\r\n        }, 5000);\r\n      });\r\n    }\r\n  };\r\n\r\n  const removePerson = (id, name) => {\r\n    if (window.confirm(`Do you really want to delete ${name}?`)) {\r\n      console.log(`Deleting ${name} with id ${id}`);\r\n      personService.remove(id).catch(() => {\r\n        setMessageStyle(\"error\");\r\n        setInfoMessage(`Sorry, ${name} is already deleted from the database`);\r\n        setTimeout(() => {\r\n          setInfoMessage(null);\r\n        }, 5000);\r\n      });\r\n      setPersons(persons.filter((p) => p.id !== id));\r\n    } else {\r\n      console.log(\"Not deleting person\");\r\n    }\r\n  };\r\n\r\n  const handleNameChange = (event) => {\r\n    console.log(event.target.value);\r\n    setNewName(event.target.value);\r\n  };\r\n\r\n  const handleNumberChange = (event) => {\r\n    console.log(event.target.value);\r\n    setNewNumber(event.target.value);\r\n  };\r\n\r\n  const handleFilterChange = (event) => {\r\n    console.log(event.target.value);\r\n    setFilter(event.target.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={infoMessage} style={messageStyle}></Notification>\r\n      <Filter filter={filter} handleFilterChange={handleFilterChange}></Filter>\r\n\r\n      <h3>Add a new</h3>\r\n\r\n      <PersonForm\r\n        addPerson={addPerson}\r\n        newName={newName}\r\n        newNumber={newNumber}\r\n        handleNameChange={handleNameChange}\r\n        handleNumberChange={handleNumberChange}\r\n      />\r\n\r\n      <h3>Numbers</h3>\r\n\r\n      <Persons\r\n        filter={filter}\r\n        removePerson={removePerson}\r\n        persons={persons}\r\n      ></Persons>\r\n\r\n      <div>\r\n        debug: {newName} {filter}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}